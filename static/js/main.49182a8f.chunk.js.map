{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","goods","visibleGoods","ALPHABET","LENGTH","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","setState","hidden","map","item","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdG,EA7CH,SACLA,EADK,GAGJ,IADCH,EACF,EADEA,SAAUD,EACZ,EADYA,WAENK,EAAY,YAAOD,GAEzB,OAAQH,GACN,KAAKL,EAASU,SACd,KAAKV,EAASW,OACZF,EAAaG,MAAK,SAACC,EAAIC,GACrB,OAAIT,IAAaL,EAASU,SACjBG,EAAGE,cAAcD,GAGnBD,EAAGG,OAASF,EAAGE,UAExB,MAEF,KAAKhB,EAASM,KACZ,MAEF,QACE,OAAOE,EAOX,OAJIJ,GACFK,EAAaQ,UAGRR,EAgBSS,CACZjB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBd,IAAaL,EAASU,SAAW,GAAK,YACnEW,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUL,EAASU,YAJvC,iCAUA,wBACEU,KAAK,SACLD,UAAS,4BAAuBd,IAAaL,EAASW,OAAS,GAAK,YACpEU,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUL,EAASW,UAJvC,4BAUA,wBACES,KAAK,SACLD,UAAS,4BAAuBf,EAAa,GAAK,YAClDiB,QAAS,WACP,EAAKC,SAAS,CAAElB,YAAaA,KAJjC,sBAUEC,IAAaL,EAASM,MAAQF,IAE5B,wBACEgB,KAAK,SACLD,UAAU,4BACVI,OAAQlB,IAAaL,EAASM,OAASF,EACvCiB,QAAS,WACP,EAAKC,SAAS,CAAEjB,SAAUL,EAASM,KAAMF,YAAY,KALzD,sBAaN,6BACE,6BACGI,EAAMgB,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,iBAjErB,GAAyBC,IAAMC,WC/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.49182a8f.chunk.js","sourcesContent":["/* eslint-disable react/jsx-wrap-multilines */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n    case SortType.LENGTH:\n      visibleGoods.sort((g1, g2) => {\n        if (sortType === SortType.ALPHABET) {\n          return g1.localeCompare(g2);\n        }\n\n        return g1.length - g2.length;\n      });\n      break;\n\n    case SortType.NONE:\n      break;\n\n    default:\n      return goods;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType === SortType.LENGTH ? '' : 'is-light'}`}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n            }}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                hidden={sortType === SortType.NONE && !isReversed}\n                onClick={() => {\n                  this.setState({ sortType: SortType.NONE, isReversed: false });\n                }}\n              >\n                Reset\n              </button>\n            )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(item => (\n              <li\n                key={item}\n                data-cy=\"Good\"\n              >\n                {item}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}